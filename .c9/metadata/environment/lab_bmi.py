{"filter":false,"title":"lab_bmi.py","tooltip":"/lab_bmi.py","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":0,"column":0},"end":{"row":24,"column":76},"action":"remove","lines":["\treturn bmi","","while True:","\theight, weight, system = gather_info()","\tif system.starswith('i'):","\t\tbmi = calculate_bmi(weight, system='imperial', height=height)","\t\tprint(f\"Your BMI is {bmi}\")","\t\tbreak","\telse:","\t\tprint(\"Error: Unknown measurement system. Please use imperial or metric.\")","","","","while True:","\theight, weight, system = gather_info()","\tif system.startswith('i'):","\t\tbmi = calculate_bmi(weight, system='imperial', height=height)","\t\tprint(f\"Your BMI is {bmi}\")","\t\tbreak","\telif system.startswith('m')","\t\tbmi = calculate_bmi(weight, height)","\t\tprint(f\"Your BMI is {bmi}\")","\t\tbreak","\telse:","\t\tprint(\"Error: Unknown measurement system. Please use imperial or metric.\")"],"id":2},{"start":{"row":0,"column":0},"end":{"row":24,"column":90},"action":"insert","lines":["def gather_info():","\theight = float(input(\"What is your height? (inches or meters) \"))","\tweight = float(input(\"What is your weight? (pounds or kilograms) \"))","\tsystem = input(\"Are your measurements in metric or imperial units? \").lower().strip()","\treturn (height, weight, system)","","def calculate_bmi(weight, height, system='metric'):","\tif system == 'metric':","\t\tbmi = (weight / (height ** 2))","\telse:","\t\tbmi = 703 * (weight / (height ** 2))","\treturn bmi","","while True:","        height, weight, system = gather_info()","        if system.startswith('i'):","                bmi = calculate_bmi(weight, system='imperial', height=height)","                print(f\"Your BMI is {bmi}\")","                break","        elif system.startswith('m')","                bmi = calculate_bmi(weight, height)","                print(f\"Your BMI is {bmi}\")","                break","        else:","                print(\"Error: Unknown measurement system. Please use imperial or metric.\")"]}],[{"start":{"row":24,"column":90},"end":{"row":25,"column":0},"action":"remove","lines":["",""],"id":3}],[{"start":{"row":19,"column":35},"end":{"row":19,"column":36},"action":"insert","lines":[":"],"id":4}],[{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"insert","lines":[" "],"id":12},{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":["W"]},{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":["o"]},{"start":{"row":0,"column":15},"end":{"row":0,"column":16},"action":"insert","lines":["r"]},{"start":{"row":0,"column":16},"end":{"row":0,"column":17},"action":"insert","lines":["l"]},{"start":{"row":0,"column":17},"end":{"row":0,"column":18},"action":"insert","lines":["d"]},{"start":{"row":0,"column":18},"end":{"row":0,"column":19},"action":"insert","lines":["!"]}],[{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["H"],"id":11},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["e"]},{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["l"]},{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":["l"]},{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["o"]}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":8},"action":"insert","lines":["\"\""],"id":10}],[{"start":{"row":0,"column":5},"end":{"row":0,"column":7},"action":"insert","lines":["()"],"id":9}],[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"remove","lines":[" "],"id":8},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"remove","lines":["f"]},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"remove","lines":["e"]},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":["d"]},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["p"]},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["r"]},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["i"]},{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["n"]},{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["t"]}],[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":[" "],"id":7}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["d"],"id":6},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["e"]},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["f"]}],[{"start":{"row":0,"column":0},"end":{"row":24,"column":90},"action":"remove","lines":["def gather_info():","\theight = float(input(\"What is your height? (inches or meters) \"))","\tweight = float(input(\"What is your weight? (pounds or kilograms) \"))","\tsystem = input(\"Are your measurements in metric or imperial units? \").lower().strip()","\treturn (height, weight, system)","","def calculate_bmi(weight, height, system='metric'):","\tif system == 'metric':","\t\tbmi = (weight / (height ** 2))","\telse:","\t\tbmi = 703 * (weight / (height ** 2))","\treturn bmi","","while True:","        height, weight, system = gather_info()","        if system.startswith('i'):","                bmi = calculate_bmi(weight, system='imperial', height=height)","                print(f\"Your BMI is {bmi}\")","                break","        elif system.startswith('m'):","                bmi = calculate_bmi(weight, height)","                print(f\"Your BMI is {bmi}\")","                break","        else:","                print(\"Error: Unknown measurement system. Please use imperial or metric.\")"],"id":5}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":24,"column":90},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1583139069695,"hash":"a50e98c9c7d3f7cee155fa1111515fdc8042bcf1"}